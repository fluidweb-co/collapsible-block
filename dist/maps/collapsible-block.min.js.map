{"version":3,"file":"../collapsible-block.min.js","sources":["collapsible-block.js"],"sourcesContent":["/**\n * File slider.js.\n *\n * Implement interactive mobile and desktop slider\n */\n\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t  define([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t  module.exports = factory(root);\n\t} else {\n\t  root.CollapsibleBlock = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {\n\t\tmanagers: [],\n\t\tstates: {\n\t\t\tCOLLAPSED: 'collapsed',\n\t\t\tFIRST_EXPANDED: 'first-expanded',\n\t\t\tEXPANDED: 'expanded',\n\t\t},\n\t};\n\tvar _settings = { };\n\tvar _defaults = {\n\t\telementSelector: '[data-collapsible]',\n\t\tcontentElementSelector: '[data-collapsible-content]',\n\t\tcontentInnerSelector: '.collapsible-content__inner',\n\t\thandlerSelector: '[data-collapsible-handler]',\n\t\t\n\t\tisCollapsedClass: 'is-collapsed',\n\t\tisActivatedClass: 'is-activated',\n\t\tcssTransition: 'height .15s linear',\n\t\t\n\t\ttargetAttribute: 'data-collapsible-target',\n\t\tmaxHeightAttribute: 'data-collapsible-max-height',\n\t\tcreateHandlerAttribute: 'data-collapsible-create-handler',\n\t\tchangeStateOnResizeAttribute: 'data-collapsible-change-state-resize',\n\n\t\tinitialState: _publicMethods.states.FIRST_EXPANDED,\n\t\tinitialStateAttribute: 'data-collapsible-initial-state',\n\t\t\n\t\tidPrefix: 'collapsible',\n\t\tcreateHandler: false,\n\t\tmaxHeight: 0,\n\t\thandlerTemplate: '<a href=\"#collapsible\" role=\"button\" data-collapsible-handler>Read more</a>',\n\t\tcontentInnerTemplate: '<div class=\"collapsible-content__inner\"></div>',\n\t};\n\n\n\n\t/*!\n\t* Merge two or more objects together.\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t* @param   {Object}   objects  The objects to merge together\n\t* @returns {Object}            Merged values of defaults and options\n\t*/\n\tvar extend = function () {\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\t\tdeep = arguments[0];\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\t// If property is an object, merge properties\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n\t};\n\n\n\n\t/**\n\t * Provide a crossbrowser way to determine which\n\t * transitionend event is supported by the current browser.\n\t * \n\t * Based on the work of:\n\t * Jonathan Suh - https://jonsuh.com/blog/detect-the-end-of-css-animations-and-transitions-with-javascript/\n\t * David Walsh - https://davidwalsh.name/css-animation-callback\n\t *\n\t * @return  {String}  The transitionend event name\n\t */\n\t var getTransitionEvent = function() {\n\t\tvar t;\n\t\tvar el = document.createElement('fakeelement');\n\t\tvar transitions = {\n\t\t\t'transition':'transitionend',\n\t\t\t'OTransition':'oTransitionEnd',\n\t\t\t'MozTransition':'transitionend',\n\t\t\t'WebkitTransition':'webkitTransitionEnd'\n\t\t}\n\n\t\tfor( t in transitions ){\n\t\t\tif( el.style[t] !== undefined ){\n\t\t\t\treturn transitions[t];\n\t\t\t}\n\t\t}\n\n\t\treturn 'animationend';\n\t};\n\n\n\n\t/**\n\t * Route click events\n\t */\n\tvar handleClick = function( e ) {\n\t\tif ( e.target.closest( _settings.handlerSelector ) ) {\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tvar handlerElement = e.target.closest( _settings.handlerSelector );\n\t\t\tvar targetElement = document.querySelector( '#' + handlerElement.getAttribute( _settings.targetAttribute ) );\n\t\t\tif ( ! targetElement ) {\n\t\t\t\ttargetElement = handlerElement;\n\t\t\t}\n\t\t\tvar element = targetElement.closest( _settings.elementSelector );\n\n\t\t\tif ( element ) {\n\t\t\t\t_publicMethods.toggleState( element );\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Create handler element\n\t */\n\tvar createHandlerElement = function( manager ) {\n\t\tvar element = manager.element;\n\t\tvar contentElement = manager.contentElement;\n\t\tvar handler = document.createElement('div');\n\t\thandler.innerHTML = manager.settings.handlerTemplate.trim();\n\t\tmanager.handlerElement = handler.childNodes[0];\n\t\tmanager.handlerElement.setAttribute( manager.settings.targetAttribute, contentElement.id );\n\t\tmanager.handlerElement.setAttribute( 'href', '#' );\n\t\tmanager.handlerElement.setAttribute( 'role', 'button' );\n\n\t\telement.insertBefore( handler.childNodes[0], contentElement.nextSibling );\n\t}\n\n\n\n\t/**\n\t * Create content inner element\n\t */\n\tvar maybeCreateContentInnerElement = function( manager ) {\n\t\t// Bail if content inner element already exists\n\t\tif ( manager.contentElement.querySelector( manager.settings.contentInnerSelector ) ) { return; }\n\t\t\n\t\tvar element = manager.element;\n\t\tvar contentElement = manager.contentElement;\n\t\tvar newContentPlaceholder = document.createElement('div');\n\t\tnewContentPlaceholder.innerHTML = manager.settings.contentInnerTemplate.trim();\n\t\tvar contentInner = newContentPlaceholder.childNodes[0];\n\n\t\t// Move content to new content inner element\n\t\tcontentInner.innerHTML = contentElement.innerHTML;\n\t\tcontentElement.innerHTML = newContentPlaceholder.innerHTML;\n\t}\n\t\n\n\n\t/**\n\t * Resize element\n\t */\n\tvar maybeChangeStateOnResize = function( manager ) {\n\t\t// Reset collapsed state\n\t\t_publicMethods.expand( manager.element );\n\n\t\trequestAnimationFrame( function() {\n\t\t\tvar elementRect = manager.element.getBoundingClientRect();\n\n\t\t\t// Maybe collapse\n\t\t\tif ( elementRect.height > manager.settings.maxHeight ) {\n\t\t\t\t_publicMethods.collapse( manager.element );\n\t\t\t}\n\t\t} );\n\t}\n\n\n\n\t/**\n\t * Get slider manager instance from slider element\n\t */\n\t_publicMethods.getInstance = function ( element ) {\n\t\tvar instance;\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tif ( manager.element == element ) { instance = manager; break; }\n\t\t}\n\t\treturn instance;\n\t}\n\n\n\n\t/**\n\t * Remove the height property value from the `contentElement` when height transition ends.\n\t */\n\tvar removeHeight = function ( e ) {\n\t\tif ( e.propertyName !== 'height' ) return;\n\n\t\t// Remove element height when transition is complete\n\t\te.target.style.height = '';\n\n\t\t// Remove the event handler so it runs only once\n\t\te.target.removeEventListener( getTransitionEvent(), removeHeight );\n\t}\n\n\n\n\t/**\n\t * Collapse element\n\t */\n\t_publicMethods.collapse = function( element ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\t\t\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return; }\n\n\t\t// Collapse element\n\t\tmanager.element.classList.add( manager.settings.isCollapsedClass );\n\n\t\t// Remove `removeHeight` event listener to prevent block from expanding\n\t\tmanager.contentElement.removeEventListener( getTransitionEvent(), removeHeight );\n\t\t\n\t\trequestAnimationFrame( function() {\n\t\t\t// Set height of the content element to it's current expanded height\n\t\t\tmanager.contentElement.style.height = manager.contentElement.scrollHeight + 'px';\n\t\t\t\n\t\t\t// Wait for the new height to apply\n\t\t\trequestAnimationFrame( function() {\n\t\t\t\t// Set height of the element to the collapsed state\n\t\t\t\tmanager.contentElement.style.height = manager.settings.maxHeight + 'px';\n\t\t\t});\n\t\t} )\n\t}\n\n\n\n\t/**\n\t * Expand element\n\t */\n\t_publicMethods.expand = function( element ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return; }\n\n\t\t// Set event handler to remove height value when transition ends\n\t\tmanager.contentElement.addEventListener( getTransitionEvent(), removeHeight );\n\n\t\trequestAnimationFrame( function() {\n\t\t\t// Expand element to its content height\n\t\t\tmanager.element.classList.remove( manager.settings.isCollapsedClass );\n\t\t\tmanager.contentElement.style.height = manager.contentElement.scrollHeight + 'px';\n\t\t} );\n\t}\n\n\n\n\t/**\n\t * Toggle collapsible state\n\t */\n\t_publicMethods.toggleState = function( element ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return; }\n\n\t\t// Toggle state\n\t\tif ( element.classList.contains( manager.settings.isCollapsedClass ) ) {\n\t\t\t_publicMethods.expand( element );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.collapse( element );\n\t\t}\n\t}\n\t\n\n\n\t/**\n\t * Get current collapsible block state\n\t */\n\t_publicMethods.getState = function( element ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return false; }\n\t\t\n\t\t// Get current state\n\t\tvar currentState = _publicMethods.states.EXPANDED;\n\t\tif ( element.classList.contains( manager.settings.isCollapsedClass ) ) {\n\t\t\tcurrentState = _publicMethods.states.COLLAPSED;\n\t\t}\n\n\t\treturn currentState;\n\t}\n\t\n\n\n\t/**\n\t * Initialize an element\n\t */\n\t_publicMethods.initializeElement = function( element ) {\n\t\tvar manager = {};\n\t\t_publicMethods.managers.push( manager );\n\t\tmanager.element = element;\n\t\tmanager.settings = extend( _settings );\n\t\t\n\t\t// Get content element\n\t\tmanager.contentElement = manager.element.querySelector( manager.settings.contentElementSelector );\n\t\tif ( ! manager.contentElement ) {\n\t\t\tmanager.contentElement = manager.element;\n\t\t}\n\t\t\n\t\t// Maybe create element ID\n\t\tif ( manager.element.id == '' ) {\n\t\t\tmanager.element.id = manager.settings.idPrefix + '_' + _publicMethods.managers.length;\n\t\t}\n\n\t\t// Maybe create contentElement ID\n\t\tif ( manager.contentElement.id == '' ) {\n\t\t\tmanager.contentElement.id = manager.element.id + '__content';\n\t\t}\n\n\t\t// Set overflow css property to hide content when the block is collapsed\n\t\tmanager.contentElement.style.overflow = 'hidden';\n\n\t\t// Get maxHeight from attributes\n\t\tvar maxHeightAttribute = manager.contentElement.getAttribute( manager.settings.maxHeightAttribute );\n\t\tmanager.settings.maxHeight = maxHeightAttribute && maxHeightAttribute != '' ? parseInt( maxHeightAttribute ) : manager.settings.maxHeight;\n\n\t\t// Get createHandler from attributes\n\t\tvar createHandler = manager.element.getAttribute( manager.settings.createHandlerAttribute );\n\t\tmanager.settings.createHandler = createHandler == 'true' || createHandler == 'false' ? Boolean( createHandler ) : manager.settings.createHandler;\n\t\tif ( manager.settings.createHandler ) {\n\t\t\tcreateHandlerElement( manager );\n\t\t}\n\n\t\t// Maybe create content inner element\n\t\tmaybeCreateContentInnerElement( manager );\n\n\t\t// Set initial state at element initialization\n\t\tvar initialStateAttribute = manager.contentElement.getAttribute( manager.settings.initialStateAttribute );\n\t\tvar initialState = initialStateAttribute ? initialStateAttribute : manager.settings.initialState;\n\t\tvar index = Array.prototype.indexOf.call( manager.element.parentNode.children, manager.element );\n\t\tif ( initialState == _publicMethods.states.EXPANDED || ( initialState == _publicMethods.states.FIRST_EXPANDED && index == 0 ) ) {\n\t\t\t_publicMethods.expand( manager.element );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.collapse( manager.element );\n\t\t}\n\t\t\n\t\t// Maybe change state on resize\n\t\tvar changeStateOnResizeAttribute = manager.element.getAttribute( manager.settings.changeStateOnResizeAttribute );\n\t\tmanager.settings.changeStateOnResize = changeStateOnResizeAttribute && changeStateOnResizeAttribute != '' ? Boolean( changeStateOnResizeAttribute ) : false;\n\t\tif ( manager.settings.changeStateOnResize ) {\n\t\t\tmaybeChangeStateOnResize( manager );\n\t\t\twindow.addEventListener( 'resize', function() { maybeChangeStateOnResize( manager ); } );\n\t\t}\n\t\t\n\t\t// Set css transition property\n\t\tvar computedTransition = window.getComputedStyle( manager.contentElement ).transition;\n\t\tvar cssTransition = computedTransition != '' ? computedTransition + ', ' + manager.settings.cssTransition : manager.settings.cssTransition;\n\t\tmanager.contentElement.style.transition = cssTransition;\n\t\t\n\t\t// Set element as activated\n\t\tmanager.isActivated = true;\n\t\tmanager.element.classList.add( manager.settings.isActivatedClass );\n\t}\n\n\t\n\n\t/**\n\t * Initialize\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge with general settings with options\n\t\t_settings = extend( _defaults, options );\n\n\t\tvar elements = document.querySelectorAll( _settings.elementSelector );\n\t\t\n\t\tfor ( var i = 0; i < elements.length; i++ ) {\n\t\t\t_publicMethods.initializeElement( elements[ i ] );\n\t\t}\n\t\t\n\t\t// Add event listeners\n\t\tdocument.addEventListener( 'click', handleClick );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CollapsibleBlock","global","this","window","getTransitionEvent","t","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","handleClick","e","target","closest","_settings","handlerSelector","preventDefault","handlerElement","element","querySelector","getAttribute","targetAttribute","elementSelector","_publicMethods","toggleState","maybeChangeStateOnResize","manager","expand","requestAnimationFrame","getBoundingClientRect","height","settings","maxHeight","collapse","_hasInitialized","managers","states","COLLAPSED","FIRST_EXPANDED","EXPANDED","_defaults","contentElementSelector","contentInnerSelector","isCollapsedClass","isActivatedClass","cssTransition","maxHeightAttribute","createHandlerAttribute","changeStateOnResizeAttribute","initialState","initialStateAttribute","idPrefix","createHandler","handlerTemplate","contentInnerTemplate","extend","extended","deep","i","Object","prototype","toString","call","arguments","length","obj","prop","hasOwnProperty","merge","getInstance","instance","removeHeight","propertyName","removeEventListener","classList","add","contentElement","scrollHeight","addEventListener","remove","contains","getState","currentState","initializeElement","push","id","overflow","parseInt","Boolean","handler","innerHTML","trim","childNodes","setAttribute","insertBefore","nextSibling","newContentPlaceholder","index","Array","indexOf","parentNode","children","changeStateOnResize","computedTransition","getComputedStyle","isActivated","init","options","elements","querySelectorAll"],"mappings":"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"}