{"version":3,"file":"../collapsible-block.min.js","sources":["collapsible-block.js"],"sourcesContent":["/**\n * File collapsible-block.js.\n *\n * Implement collapsible block functionality.\n */\n(function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t  define([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t  module.exports = factory(root);\n\t} else {\n\t  root.CollapsibleBlock = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {\n\t\tmanagers: [],\n\t\tstates: {\n\t\t\tCOLLAPSED: 'collapsed',\n\t\t\tFIRST_EXPANDED: 'first-expanded',\n\t\t\tEXPANDED: 'expanded',\n\t\t},\n\t};\n\tvar _settings = { };\n\tvar _defaults = {\n\t\tbodyClass: 'has-collapsible-block',\n\n\t\telementSelector: '[data-collapsible]',\n\t\tcontentElementSelector: '[data-collapsible-content]',\n\t\tcontentInnerSelector: '.collapsible-content__inner',\n\t\thandlerSelector: '[data-collapsible-handler]',\n\t\thandlerMultiTargetSelector: '[data-collapsible-targets]',\n\n\t\tautoFocusSelector: '[data-autofocus]',\n\t\tfocusableElementsSelector: 'a[href], a[role=\"button\"]:not([disabled]), button:not([disabled]), input:not([disabled]):not([type=\"hidden\"]), textarea:not([disabled]), select:not([disabled]), details, summary, iframe, object, embed, [contenteditable] [tabindex]:not([tabindex=\"-1\"])',\n\t\tselectContentsOnFocus: true,\n\n\t\tisCollapsedClass: 'is-collapsed',\n\t\tisExpandedClass: 'is-expanded',\n\t\tisActivatedClass: 'is-activated',\n\t\tcssTransition: 'height .15s linear',\n\n\t\ttargetAttribute: 'aria-controls',\n\t\tmultiTargetAttribute: 'data-collapsible-targets',\n\t\tmaxHeightAttribute: 'data-collapsible-max-height',\n\t\tcreateHandlerAttribute: 'data-collapsible-create-handler',\n\t\tchangeStateOnResizeAttribute: 'data-collapsible-change-state-resize',\n\n\t\tinitialState: _publicMethods.states.FIRST_EXPANDED,\n\t\tinitialStateAttribute: 'data-collapsible-initial-state',\n\n\t\tidPrefix: 'collapsible',\n\t\tcreateHandler: false,\n\t\tmaxHeight: 0,\n\t\thandlerTemplate: '<a href=\"#collapsible\" role=\"button\" data-collapsible-handler>Read more</a>',\n\t\tcontentInnerTemplate: '<div class=\"collapsible-content__inner\"></div>',\n\t};\n\tvar _key = {\n\t\tENTER: 'Enter',\n\t\tSPACE: ' ',\n\t}\n\tvar _canChangeFocus = false;\n\n\n\n\t/**!\n\t * Merge two or more objects together.\n\t * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t * @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t * @param   {Object}   objects  The objects to merge together\n\t * @returns {Object}            Merged values of defaults and options\n\t */\n\tvar extend = function () {\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\t\tdeep = arguments[0];\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\t// If property is an object, merge properties\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n\t};\n\n\n\n\t/**\n\t * Provide a crossbrowser way to determine which\n\t * transitionend event is supported by the current browser.\n\t *\n\t * Based on the work of:\n\t * Jonathan Suh - https://jonsuh.com/blog/detect-the-end-of-css-animations-and-transitions-with-javascript/\n\t * David Walsh - https://davidwalsh.name/css-animation-callback\n\t *\n\t * @return  {String}  The transitionend event name\n\t */\n\tvar getTransitionEndEvent = function() {\n\t\tvar t;\n\t\tvar el = document.createElement('fakeelement');\n\t\tvar transitions = {\n\t\t\t'transition':'transitionend',\n\t\t\t'OTransition':'oTransitionEnd',\n\t\t\t'MozTransition':'transitionend',\n\t\t\t'WebkitTransition':'webkitTransitionEnd'\n\t\t}\n\n\t\tfor( t in transitions ){\n\t\t\tif( el.style[t] !== undefined ){\n\t\t\t\treturn transitions[t];\n\t\t\t}\n\t\t}\n\n\t\treturn 'transitionend';\n\t};\n\n\n\n\t/**\n\t * Trigger a reflow, flushing the CSS changes.\n\t *\n\t * @param   HTMLElement  element  Element to get the computed height value.\n\t *\n\t * @see https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n\t */\n\tvar reflow = function( element ) {\n\t\t// Set element as the body when not provided\n\t\tif ( ! element ) {\n\t\t\telement = document.body;\n\t\t}\n\n\t\telement.offsetHeight;\n\t}\n\n\n\n\t/**\n\t * Check if the element is considered visible. Does not consider the CSS property `visibility: hidden;`.\n\t */\n\t var isVisible = function( element ) {\n\t\treturn !!( element.offsetWidth || element.offsetHeight || element.getClientRects().length );\n\t}\n\n\n\n\t/**\n\t * Gets keyboard-focusable elements within a specified element\n\t *\n\t * @param   HTMLElement  element  The element to search within. Defaults to the `document` root element.\n\t *\n\t * @return  NodeList              All focusable elements withing the element passed in.\n\t */\n\t var getFocusableElements = function( element ) {\n\t\t// Set element to `document` root if not passed in\n\t\tif ( ! element ) { element = document; }\n\n\t\t// Get elements that are keyboard-focusable\n\t\treturn element.querySelectorAll( _settings.focusableElementsSelector );\n\t}\n\n\n\n\t/**\n\t * Handle toggle events for handlers with multiple targets.\n\t *\n\t * @param   HTMLElement  handlerElement  Handler element.\n\t */\n\tvar handleMultipleTargets = function( handlerElement ) {\n\t\t// Bail if handler element is not valid\n\t\tif ( ! handlerElement ) { return; }\n\n\t\t// Get target ids\n\t\tvar multiTargetIds = handlerElement.getAttribute( _settings.multiTargetAttribute );\n\t\tvar targetIds = multiTargetIds.split( ',' );\n\n\t\t// Iterate targetIds\n\t\tfor ( var i = 0; i < targetIds.length; i++) {\n\t\t\tvar targetId = targetIds[i];\n\n\t\t\t// Get target element\n\t\t\tvar targetElement = document.querySelector( '#' + targetId.trim() );\n\t\t\tif ( targetElement ) {\n\t\t\t\t// Get the collapsbile element\n\t\t\t\tvar element = targetElement.closest( _settings.elementSelector );\n\n\t\t\t\t// Maybe toggle collapsbile element state\n\t\t\t\tif ( element ) {\n\t\t\t\t\t_publicMethods.toggleState( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Handle toggle events for handlers with single targets.\n\t *\n\t * @param   HTMLElement  handlerElement  Handler element.\n\t */\n\tvar handleSingleTarget = function( handlerElement ) {\n\t\t// Bail if handler element is not valid\n\t\tif ( ! handlerElement ) { return; }\n\n\t\t// Get target element\n\t\tvar targetElement = document.querySelector( '#' + handlerElement.getAttribute( _settings.targetAttribute ) );\n\n\t\t// Get target element from the handler element\n\t\tif ( ! targetElement ) {\n\t\t\ttargetElement = handlerElement;\n\t\t}\n\n\t\t// Get the collapsbile element\n\t\tvar element = targetElement.closest( _settings.elementSelector );\n\n\t\t// Maybe toggle collapsbile element state\n\t\tif ( element ) {\n\t\t\t_publicMethods.toggleState( element );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Route click events\n\t */\n\tvar handleClick = function( e ) {\n\t\tif ( e.target.closest( _settings.handlerSelector ) && e.target.closest( _settings.handlerMultiTargetSelector ) ) {\n\t\t\te.preventDefault();\n\t\t\tvar handlerElement = e.target.closest( _settings.handlerMultiTargetSelector );\n\t\t\thandleMultipleTargets( handlerElement );\n\t\t}\n\t\telse if ( e.target.closest( _settings.handlerSelector ) ) {\n\t\t\te.preventDefault();\n\t\t\tvar handlerElement = e.target.closest( _settings.handlerSelector );\n\t\t\thandleSingleTarget( handlerElement );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Handle keypress event.\n\t */\n\tvar handleKeyDown = function( e ) {\n\t\t// Should do nothing if the default action has been cancelled\n\t\tif ( e.defaultPrevented ) { return; }\n\n\t\t// ENTER or SPACE on handler element\n\t\tif ( ( e.key == _key.ENTER || e.key == _key.SPACE ) && e.target.closest( _settings.handlerSelector ) ) {\n\t\t\t// Similate click\n\t\t\thandleClick( e );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Create handler element\n\t */\n\tvar createHandlerElement = function( manager ) {\n\t\tvar element = manager.element;\n\t\tvar contentElement = manager.contentElement;\n\t\tvar handler = document.createElement('div');\n\t\thandler.innerHTML = manager.settings.handlerTemplate.trim();\n\t\tmanager.handlerElement = handler.childNodes[0];\n\t\tmanager.handlerElement.setAttribute( manager.settings.targetAttribute, contentElement.id );\n\n\t\telement.insertBefore( handler.childNodes[0], contentElement.nextSibling );\n\t}\n\n\n\n\t/**\n\t * Create content inner element\n\t */\n\tvar maybeCreateContentInnerElement = function( manager ) {\n\t\t// Bail if content inner element already exists\n\t\tif ( manager.contentElement.querySelector( manager.settings.contentInnerSelector ) ) { return; }\n\n\t\tvar contentElement = manager.contentElement;\n\t\tvar newContentPlaceholder = document.createElement('div');\n\t\tnewContentPlaceholder.innerHTML = manager.settings.contentInnerTemplate.trim();\n\t\tvar contentInner = newContentPlaceholder.childNodes[0];\n\n\t\t// Move content to new content inner element\n\t\tcontentInner.innerHTML = contentElement.innerHTML;\n\t\tcontentElement.innerHTML = newContentPlaceholder.innerHTML;\n\t}\n\n\n\n\t/**\n\t * Get the element's computed `height` even when hidden or collapsed.\n\t *\n\t * @param   HTMLElement  element  Element to get the computed height value.\n\t *\n\t * @return  Number                The computed height value of the element.\n\t */\n\tvar getComputedHeight = function( element ) {\n\t\t// Get original element style values\n\t\tvar originalPosition = element.style.position;\n\t\tvar originalDisplay = element.style.display;\n\t\tvar originalVisibility = element.style.visibility;\n\t\tvar originalTransition = element.style.transition;\n\t\tvar originalHeight = element.style.height;\n\n\t\t// Set element styles prior to getting its height\n\t\telement.style.position = 'absolute';\n\t\telement.style.display = 'block';\n\t\telement.style.visibility = 'hidden';\n\t\telement.style.transition = 'none';\n\t\telement.style.height = '';\n\n\t\t// Get the element's natural height\n\t\tvar computedHeight = element.scrollHeight;\n\n\t\t// Set element styles back to original values\n\t\telement.style.position = originalPosition;\n\t\telement.style.display = originalDisplay;\n\t\telement.style.visibility = originalVisibility;\n\t\telement.style.transition = originalTransition;\n\t\telement.style.height = originalHeight;\n\n\t\treturn computedHeight;\n\t}\n\n\n\n\t/**\n\t * Get the element's current used `height` space, even in the middle of a transition.\n\t *\n\t * @param   HTMLElement  element  Element to get the current height value.\n\t *\n\t * @return  Number                The current height value of the element.\n\t */\n\tvar getCurrentHeight = function( element ) {\n\t\treturn element.getBoundingClientRect().height;\n\t}\n\n\n\n\t/**\n\t * Set the height of the content element.\n\t *\n\t * @param   HTMLElement  element         Collapsible block content element.\n\t * @param   Number       size            New height value for the content element in pixels. The string `px` will be added to the value before setting it to the element's style property.\n\t * @param   Boolean      withTransition  Whether to use transitions between states.\n\t */\n\tvar setHeight = function( element, size, withTransition ) {\n\t\t// Set default value for withTransition\n\t\twithTransition = withTransition === false ? false : true;\n\n\t\t// Remove element's transition\n\t\tvar originalTransition;\n\t\tif ( ! withTransition ) {\n\t\t\toriginalTransition = element.style.transition;\n\t\t\telement.style.transition = 'none';\n\t\t}\n\n\t\t// Set the element's new height\n\t\telement.style.height = size + 'px';\n\n\t\t// Restore element's transition\n\t\tif ( ! withTransition ) {\n\t\t\t// Trigger a reflow, flushing the CSS changes\n\t\t\treflow( element );\n\n\t\t\t// Set element styles back to original values\n\t\t\telement.style.transition = originalTransition;\n\t\t}\n\t}\n\n\t/**\n\t * Get the CSS transition duration in milliseconds for the element.\n\t *\n\t * @param   HTMLElement  element   Element to get the transition duration value.\n\t */\n\tvar getHeightTransitionDuration = function( element ) {\n\t\t// Bail as zero if element is invalid\n\t\tif ( ! element ) { return 0; }\n\n\t\t// Get transition duration for the height property\n\t\tvar transitionProperties = window.getComputedStyle( element ).transitionProperty;\n\t\tvar transitionDurations = window.getComputedStyle( element ).transitionDuration;\n\n\t\t// Bail as zero if transition styles are not set\n\t\tif ( ! transitionProperties || ! transitionDurations ) { return 0; }\n\n\t\t// Get transition properties and durations in lists\n\t\tvar transitionPropertiesList = transitionProperties.split( ', ' );\n\t\tvar transitionDurationsList = transitionDurations.split( ', ' );\n\n\t\t// Get index of the `height` property in the transition properties list\n\t\tvar heightPropertyIndex = transitionPropertiesList.indexOf( 'height' );\n\n\t\t// Get the duration of the `height` property transition in milliseconds\n\t\tvar heightTransitionValue = transitionDurationsList[ heightPropertyIndex ];\n\t\tvar heightTransitionInMilliseconds = heightTransitionValue && heightTransitionValue.indexOf( 'ms' ) > -1;\n\t\tvar heightTransitionDuration = heightTransitionValue && heightPropertyIndex > -1 ? parseFloat( heightTransitionValue ) : 0;\n\n\t\t// Maybe convert the duration to milliseconds\n\t\theightTransitionDuration = heightTransitionInMilliseconds ? heightTransitionDuration : heightTransitionDuration * 1000;\n\n\t\t// Return the duration of the `height` property transition in milliseconds\n\t\treturn heightTransitionDuration;\n\t}\n\n\n\n\t/**\n\t * Resize element\n\t */\n\tvar maybeChangeStateOnResize = function( manager ) {\n\t\t// TODO: REFACTOR THIS FUNCTION TO BE MORE EFFICIENT\n\t\t// Reset collapsed state\n\t\t_publicMethods.expand( manager.element );\n\n\t\trequestAnimationFrame( function() {\n\t\t\t// Maybe collapse\n\t\t\tif ( getComputedHeight( manager.contentElement ) > manager.settings.maxHeight ) {\n\t\t\t\t_publicMethods.collapse( manager.element );\n\t\t\t}\n\t\t} );\n\t}\n\n\n\n\t/**\n\t * Syncronize `aria-expanded` attribute for every handler of the collapsible-block on the page\n\t *\n\t * @param   mixed  HTMLElement  The content element of the collapsible block\n\t */\n\tvar syncAriaExpanded = function ( element, expanded ) {\n\t\t// Bail if `element` or `expanded` are invalid\n\t\tif ( ! element && typeof expanded !== 'boolean' ) { return; }\n\n\t\tvar handlers = document.querySelectorAll( '[' + _settings.targetAttribute + '=' + element.id + ']' );\n\t\tfor ( var i = 0; i < handlers.length; i++ ) {\n\t\t\tvar handler = handlers[ i ];\n\t\t\thandler.setAttribute( 'aria-expanded', expanded );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Finish the change to the \"expanded\" state.\n\t *\n\t * @param   mixed    element     The content element of the collapsible block as a HTMLElement, or an Event dispatched on that element.\n\t */\n\tvar finishExpand = function ( element ) {\n\t\t// Bail if element is invalid\n\t\tif ( ! element ) { return; }\n\n\t\t// Maybe bail when handling a transition event but not for the right property\n\t\tif ( 'propertyName' in element && element.propertyName !== 'height' ) return;\n\n\t\t// Get target element from property, usually passed in an event object\n\t\tif ( 'target' in element && element.target ) {\n\t\t\telement = element.target;\n\t\t}\n\n\t\t// Remove content element properties when transition is complete\n\t\telement.style.height = '';\n\t\telement.style.overflow = '';\n\n\t\t// Syncronize `aria-expanded` for every handler on the page\n\t\tsyncAriaExpanded( element, true );\n\n\t\t// Maybe set focus state\n\t\tvar manager = _publicMethods.getInstance( element.closest( _settings.elementSelector ) );\n\t\tif ( _canChangeFocus && manager && manager.isActivated === true && manager.withFocus ) {\n\t\t\tvar focusElement = null;\n\n\t\t\t// Maybe set focus to the child element marked as auto-focus that is visible, skipping those in nested collapsible blocks\n\t\t\tvar autofocusChildren = element.querySelectorAll( _settings.autoFocusSelector );\n\t\t\tif ( ! focusElement && autofocusChildren ) {\n\t\t\t\tfor ( var i = 0; i < autofocusChildren.length; i++ ) {\n\t\t\t\t\tvar autofocusChild = autofocusChildren[i];\n\n\t\t\t\t\tif ( autofocusChild.closest( _settings.contentElementSelector ) === element && isVisible( autofocusChild ) ) {\n\t\t\t\t\t\tfocusElement = autofocusChild;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Maybe set focusElement to the first focusable element that is visible\n\t\t\tif ( ! focusElement && element.matches( _settings.autoFocusSelector ) ) {\n\t\t\t\tvar focusableElements = Array.from( getFocusableElements( element ) );\n\n\t\t\t\tfor ( var i = 0; i < focusableElements.length; i++ ) {\n\t\t\t\t\tvar focusableElement = focusableElements[i];\n\t\t\t\t\tif ( isVisible( focusableElement ) ) {\n\t\t\t\t\t\tfocusElement = focusableElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set focus to focusElement\n\t\t\tif ( focusElement ) {\n\t\t\t\tfocusElement.focus();\n\t\t\t\tif ( _settings.selectContentsOnFocus && 'select' in focusElement ) {\n\t\t\t\t\tfocusElement.select();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Reset `withFocus` flag on the manager back to default behavior\n\t\tmanager.withFocus = true;\n\n\t\t// Remove the event handler so it runs only once\n\t\telement.removeEventListener( getTransitionEndEvent(), finishExpand );\n\t}\n\n\n\t/**\n\t * Finish the change to the \"collapsed\" state.\n\t *\n\t * @param   mixed  element  The content element of the collapsible block as a HTMLElement, or an Event dispatched on that element.\n\t */\n\tvar finishCollapse = function ( element ) {\n\t\t// Bail if element is invalid\n\t\tif ( ! element ) { return; }\n\n\t\t// Maybe bail when handling a transition event but not for the right property\n\t\tif ( 'propertyName' in element && element.propertyName !== 'height' ) return;\n\n\t\t// Get target element from property, usually passed in an event object\n\t\tif ( 'target' in element && element.target ) {\n\t\t\telement = element.target;\n\t\t}\n\n\t\t// Hide the element from the screen and from the accessibility tree\n\t\telement.style.display = 'none';\n\n\t\t// Syncronize `aria-expanded` for every handler on the page\n\t\tsyncAriaExpanded( element, false );\n\n\t\t// Remove the event handler so it runs only once\n\t\telement.removeEventListener( getTransitionEndEvent(), finishCollapse );\n\t}\n\n\n\n\t/**\n\t * Get slider manager instance from slider element.\n\t *\n\t * @param   HTMLElement  element  Collapsible block main element.\n\t *\n\t * @return  Object                Collapsible block `manager` instance.\n\t */\n\t_publicMethods.getInstance = function ( element ) {\n\t\tvar instance;\n\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tif ( manager.element == element ) { instance = manager; break; }\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\n\n\t/**\n\t * Collapse element.\n\t *\n\t * @param   HTMLElement  element         Collapsible block main element.\n\t * @param   Boolean      withTransition  Whether to use transitions between states.\n\t */\n\t_publicMethods.collapse = function( element, withTransition ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\t// TODO: Maybe try to initialize collapsible and manager on the fly\n\t\tif ( ! manager ) { return; }\n\n\t\t// Set default value for withTransition\n\t\twithTransition = withTransition === false ? false : true;\n\n\t\t// Update element's state to `collapsed`\n\t\tmanager.element.classList.add( manager.settings.isCollapsedClass );\n\t\tmanager.element.classList.remove( manager.settings.isExpandedClass );\n\n\t\t// Remove `finishExpand` event listener to prevent block from expanding at the end of the transition\n\t\tmanager.contentElement.removeEventListener( getTransitionEndEvent(), finishExpand );\n\n\t\t// Set content element to hide overflowing content\n\t\tmanager.contentElement.style.overflow = 'hidden';\n\n\t\t// Set height of the element to the current height value\n\t\t// Without knowing the value of `height` property the browser can't calculate the steps of the `height` values\n\t\t// related to the transition time and therefore won't be able to display the transition.\n\t\tsetHeight( manager.contentElement, getCurrentHeight( manager.contentElement ), false );\n\n\t\t// Set event listener to finish the \"collapse\" state change\n\t\tif ( withTransition ) {\n\t\t\tmanager.contentElement.addEventListener( getTransitionEndEvent(), finishCollapse );\n\t\t}\n\n\t\t// Trigger a reflow, flushing the CSS changes\n\t\treflow( element );\n\n\t\t// Set height of the element to the `collapsed` state\n\t\tsetHeight( manager.contentElement, manager.settings.maxHeight, withTransition );\n\n\t\t// Make sure to finish the \"collapse\" state change when transitions are not used\n\t\tif ( ! withTransition ) {\n\t\t\tfinishCollapse( manager.contentElement );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Expand element.\n\t *\n\t * @param   HTMLElement  element         Collapsible block main element.\n\t * @param   Boolean      withTransition  Whether to use transitions between states. Defaults to `true`.\n\t * @param   Boolean      withFocus       Whether to set the focus to the field when expanding. Cannot be used with `withTransition = true`. Defaults to `true`.\n\t */\n\t_publicMethods.expand = function( element, withTransition, withFocus ) {\n\t\t// Get element manager\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\t// TODO: Maybe try to initialize collapsible and manager on the fly\n\t\tif ( ! manager ) { return; }\n\n\t\t// Set default value for parameters\n\t\twithTransition = withTransition === false ? false : true;\n\t\twithFocus = withFocus === false ? false : true;\n\n\t\t// Set flag `withFocus` to the element manager\n\t\tmanager.withFocus = withFocus;\n\n\t\t// Show the element again on the screen and add it back to the accessibility tree\n\t\tmanager.contentElement.style.display = '';\n\n\t\t// Remove `finishCollapse` event listener to prevent block from collapsing at the end of the transition\n\t\tmanager.contentElement.removeEventListener( getTransitionEndEvent(), finishCollapse );\n\n\t\t// Set height of the element to the current height value\n\t\tsetHeight( manager.contentElement, getCurrentHeight( manager.contentElement ), false );\n\n\t\t// Set event listener to finish the \"expand\" state change\n\t\tif ( withTransition ) {\n\t\t\tmanager.contentElement.addEventListener( getTransitionEndEvent(), finishExpand );\n\t\t}\n\n\t\t// Get the duration of the `height` property transition in milliseconds\n\t\tvar heightTransitionDuration = getHeightTransitionDuration( manager.contentElement );\n\n\t\t// Expand element to its content height\n\t\trequestAnimationFrame( function() {\n\t\t\tvar computedHeight = getComputedHeight( manager.contentElement );\n\n\t\t\t// Trigger a reflow, flushing the CSS changes\n\t\t\treflow( element );\n\n\t\t\t// Set height of the element to the `expanded` state\n\t\t\tsetHeight( manager.contentElement, computedHeight, withTransition );\n\n\t\t\t// Update element's state to `expanded`\n\t\t\tmanager.element.classList.add( manager.settings.isExpandedClass );\n\t\t\tmanager.element.classList.remove( manager.settings.isCollapsedClass );\n\n\t\t\t// Make sure to finish the \"expand\" state change when transitions are not used\n\t\t\tif ( ! withTransition ) {\n\t\t\t\tfinishExpand( manager.contentElement );\n\t\t\t}\n\n\t\t\t// Make sure to finish the \"expand\" state change after the duration of the height transition,\n\t\t\t// so we don't need to rely completely on the browser's transitionend event.\n\t\t\tsetTimeout( function() {\n\t\t\t\tfinishExpand( manager.contentElement );\n\t\t\t}, heightTransitionDuration + 50 );\n\t\t} );\n\t}\n\n\t/**\n\t * Enable focus on expand.\n\t */\n\t_publicMethods.enableFocusOnExpand = function() {\n\t\t_canChangeFocus = true;\n\t}\n\n\t/**\n\t * Disable focus on expand.\n\t */\n\t_publicMethods.disableFocusOnExpand = function() {\n\t\t_canChangeFocus = false;\n\t}\n\n\n\n\t/**\n\t * Toggle between collapsed/expanded states of the element.\n\t *\n\t * @param   HTMLElement  element         Collapsible block main element.\n\t * @param   Boolean      withTransition  Whether to use transitions between states.\n\t */\n\t_publicMethods.toggleState = function( element, withTransition ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return; }\n\n\t\t// Toggle state\n\t\tif ( element.classList.contains( manager.settings.isCollapsedClass ) ) {\n\t\t\t_publicMethods.expand( element, withTransition );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.collapse( element, withTransition );\n\t\t}\n\t}\n\n\n\n\t/**\n\t * /**\n\t * Get current state of the collapsible block.\n\t *\n\t * @param   HTMLElement  element         Collapsible block main element.\n\t *\n\t * @return  string                       Either `collapsed` or `expanded`. Can be compared to the constants present in `CollapsibleBlock.states`.\n\t */\n\t_publicMethods.getState = function( element ) {\n\t\tvar manager = _publicMethods.getInstance( element );\n\n\t\t// Bail if manager not found\n\t\tif ( ! manager ) { return false; }\n\n\t\t// Get current state\n\t\tvar currentState = _publicMethods.states.EXPANDED;\n\t\tif ( element.classList.contains( manager.settings.isCollapsedClass ) ) {\n\t\t\tcurrentState = _publicMethods.states.COLLAPSED;\n\t\t}\n\n\t\treturn currentState;\n\t}\n\n\n\n\t/**\n\t * Initialize a handler element.\n\t */\n\t_publicMethods.initializeHandler = function( handler ) {\n\t\t// Enable the handler element\n\t\thandler.removeAttribute( 'disabled' );\n\t\thandler.removeAttribute( 'aria-hidden' );\n\n\t\t// Add the element to the natural tab order\n\t\thandler.setAttribute( 'tabindex', '0' );\n\n\t\t// Set handler role to `button`\n\t\tif ( handler.tagName.toUpperCase() != 'BUTTON' ) {\n\t\t\thandler.setAttribute( 'role', 'button' );\n\t\t}\n\n\t\t// Get target attributes\n\t\tvar targetId = handler.getAttribute( _settings.targetAttribute );\n\t\tvar multiTargetIds = handler.getAttribute( _settings.multiTargetAttribute );\n\n\t\t// Maybe get target element id from attributes or parent elements\n\t\tif ( ( ! targetId || targetId == '' ) && ( ! multiTargetIds || multiTargetIds == '' ) ) {\n\t\t\tvar parentCollapsible = handler.closest( _settings.elementSelector );\n\n\t\t\t// Check if collapsbile blocks is also the content element\n\t\t\tif ( parentCollapsible && parentCollapsible.matches( _settings.contentElementSelector ) ) {\n\t\t\t\ttargetId = parentCollapsible.id;\n\t\t\t}\n\t\t\t// Else, try to get content element from the collapsible block\n\t\t\telse if ( parentCollapsible && parentCollapsible.querySelector( _settings.contentElementSelector ) ) {\n\t\t\t\tvar contentElement = parentCollapsible.querySelector( _settings.contentElementSelector );\n\t\t\t\ttargetId = contentElement.id;\n\t\t\t}\n\n\t\t\t// Maybe set target attribute\n\t\t\tif ( targetId && targetId != '' ) {\n\t\t\t\thandler.setAttribute( _settings.targetAttribute, targetId );\n\t\t\t}\n\t\t}\n\n\t\t// Remove the `href` attribute\n\t\thandler.removeAttribute( 'href' );\n\t}\n\n\n\n\t/**\n\t * Initialize an element.\n\t *\n\t * @param   HTMLElement  element  Collapsible block main element.\n\t */\n\t_publicMethods.initializeElement = function( element ) {\n\t\tvar manager = {};\n\t\t_publicMethods.managers.push( manager );\n\t\tmanager.element = element;\n\t\t// TODO: Refactor to remove `manager.settings` as it will always be a copy of the high-level `_settings` variable, with more properties that can be added directly to the `manager` variable.\n\t\tmanager.settings = extend( _settings );\n\n\t\t// Set default behavior for setting focus when expanding the element\n\t\tmanager.withFocus = true;\n\n\t\t// Get content element\n\t\tmanager.contentElement = manager.element.matches( _settings.contentElementSelector ) ? manager.element : manager.element.querySelector( manager.settings.contentElementSelector );\n\t\tif ( ! manager.contentElement ) {\n\t\t\tmanager.contentElement = manager.element;\n\t\t}\n\n\t\t// Maybe create element ID\n\t\tif ( manager.element.id == '' ) {\n\t\t\tmanager.element.id = manager.settings.idPrefix + '_' + _publicMethods.managers.length;\n\t\t}\n\n\t\t// Maybe create contentElement ID\n\t\tif ( manager.contentElement.id == '' ) {\n\t\t\tmanager.contentElement.id = manager.element.id + '__content';\n\t\t}\n\n\t\t// Get maxHeight from attributes\n\t\tvar maxHeightAttribute = manager.contentElement.getAttribute( manager.settings.maxHeightAttribute );\n\t\tmanager.settings.maxHeight = maxHeightAttribute && maxHeightAttribute != '' ? parseInt( maxHeightAttribute ) : manager.settings.maxHeight;\n\n\t\t// Get createHandler from attributes\n\t\tvar createHandler = manager.element.getAttribute( manager.settings.createHandlerAttribute );\n\t\tmanager.settings.createHandler = createHandler == 'true' || createHandler == 'false' ? Boolean( createHandler ) : manager.settings.createHandler;\n\t\tif ( manager.settings.createHandler ) {\n\t\t\tcreateHandlerElement( manager );\n\t\t}\n\n\t\t// Maybe create content inner element\n\t\tmaybeCreateContentInnerElement( manager );\n\n\t\t// Set initial state at element initialization\n\t\tvar initialStateAttribute = manager.contentElement.getAttribute( manager.settings.initialStateAttribute );\n\t\tvar initialState = initialStateAttribute ? initialStateAttribute : manager.settings.initialState;\n\t\tvar index = Array.prototype.indexOf.call( manager.element.parentNode.children, manager.element );\n\t\tif ( initialState == _publicMethods.states.EXPANDED || ( initialState == _publicMethods.states.FIRST_EXPANDED && index == 0 ) ) {\n\t\t\t_publicMethods.expand( manager.element, false );\n\t\t}\n\t\telse {\n\t\t\t_publicMethods.collapse( manager.element, false );\n\t\t}\n\n\t\t// Maybe change state on resize\n\t\tvar changeStateOnResizeAttribute = manager.element.getAttribute( manager.settings.changeStateOnResizeAttribute );\n\t\tmanager.settings.changeStateOnResize = changeStateOnResizeAttribute && changeStateOnResizeAttribute != '' ? Boolean( changeStateOnResizeAttribute ) : false;\n\t\tif ( manager.settings.changeStateOnResize ) {\n\t\t\tmaybeChangeStateOnResize( manager );\n\n\t\t\t// TODO: Maybe move event handler to a single listener\n\t\t\twindow.addEventListener( 'resize', function() { maybeChangeStateOnResize( manager ); } );\n\t\t}\n\n\t\t// Set css transition property\n\t\tvar computedTransition = window.getComputedStyle( manager.contentElement ).transition;\n\t\tvar cssTransition = computedTransition != '' ? computedTransition + ', ' + manager.settings.cssTransition : manager.settings.cssTransition;\n\t\tmanager.contentElement.style.transition = cssTransition;\n\n\t\t// Set element as activated\n\t\trequestAnimationFrame( function(){\n\t\t\tmanager.isActivated = true;\n\t\t\tmanager.element.classList.add( manager.settings.isActivatedClass );\n\t\t} );\n\t}\n\n\n\n\t/**\n\t * Initialize.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge with general settings with options\n\t\t_settings = extend( _defaults, options );\n\n\t\t// Initialize collapsible elements\n\t\tvar elements = document.querySelectorAll( _settings.elementSelector );\n\t\tfor ( var i = 0; i < elements.length; i++ ) {\n\t\t\t_publicMethods.initializeElement( elements[ i ] );\n\t\t}\n\n\t\t// Initialize handler elements\n\t\tvar handlers = document.querySelectorAll( _settings.handlerSelector );\n\t\tfor ( var i = 0; i < handlers.length; i++ ) {\n\t\t\t_publicMethods.initializeHandler( handlers[ i ] );\n\t\t}\n\n\t\t// Trigger a reflow, flushing the CSS changes\n\t\treflow();\n\n\t\t// Syncronize `aria-expanded` for every handler on the page\n\t\tfor ( var i = 0; i < elements.length; i++ ) {\n\t\t\tvar element = elements[ i ];\n\t\t\tvar contentElement = element.matches( _settings.contentElementSelector ) ? element : element.querySelector( _settings.contentElementSelector );\n\t\t\tsyncAriaExpanded( contentElement, _publicMethods.getState( element ) == _publicMethods.states.EXPANDED );\n\t\t}\n\n\t\t// Add event listeners\n\t\tdocument.addEventListener( 'click', handleClick );\n\t\tdocument.addEventListener( 'keydown', handleKeyDown, true );\n\n\t\t// Set body class\n\t\tdocument.body.classList.add( _settings.bodyClass );\n\n\t\t// Enable focus\n\t\t_publicMethods.enableFocusOnExpand();\n\n\t\t// Set as initialized\n\t\trequestAnimationFrame( function() {\n\t\t\t_hasInitialized = true;\n\t\t} );\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","CollapsibleBlock","global","this","window","extend","extended","deep","i","Object","prototype","toString","call","arguments","length","prop","obj","hasOwnProperty","getTransitionEndEvent","t","el","document","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","reflow","element","body","offsetHeight","isVisible","offsetWidth","getClientRects","handleClick","e","target","closest","_settings","handlerSelector","handlerMultiTargetSelector","preventDefault","handlerElement","targetIds","getAttribute","multiTargetAttribute","split","targetId","targetElement","querySelector","trim","elementSelector","_publicMethods","toggleState","targetAttribute","handleKeyDown","defaultPrevented","key","_key","getComputedHeight","originalPosition","position","originalDisplay","display","originalVisibility","visibility","originalTransition","originalHeight","height","computedHeight","scrollHeight","getCurrentHeight","getBoundingClientRect","setHeight","size","withTransition","maybeChangeStateOnResize","manager","expand","requestAnimationFrame","contentElement","settings","maxHeight","collapse","syncAriaExpanded","expanded","handlers","querySelectorAll","id","setAttribute","finishExpand","propertyName","overflow","getInstance","_canChangeFocus","isActivated","withFocus","focusElement","autofocusChildren","autoFocusSelector","autofocusChild","contentElementSelector","matches","focusableElements","Array","from","focusableElementsSelector","focusableElement","focus","selectContentsOnFocus","select","removeEventListener","finishCollapse","_hasInitialized","managers","states","COLLAPSED","FIRST_EXPANDED","EXPANDED","_defaults","bodyClass","contentInnerSelector","isCollapsedClass","isExpandedClass","isActivatedClass","cssTransition","maxHeightAttribute","createHandlerAttribute","changeStateOnResizeAttribute","initialState","initialStateAttribute","idPrefix","createHandler","handlerTemplate","contentInnerTemplate","instance","classList","add","remove","addEventListener","heightTransitionDuration","heightTransitionValue","heightTransitionInMilliseconds","transitionProperties","getComputedStyle","transitionProperty","transitionDurations","transitionDuration","transitionPropertiesList","heightPropertyIndex","indexOf","parseFloat","setTimeout","enableFocusOnExpand","disableFocusOnExpand","contains","getState","currentState","initializeHandler","handler","removeAttribute","tagName","toUpperCase","multiTargetIds","parentCollapsible","initializeElement","newContentPlaceholder","push","parseInt","Boolean","innerHTML","childNodes","insertBefore","nextSibling","index","parentNode","children","computedTransition","changeStateOnResize","init","options","elements"],"mappings":"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"}